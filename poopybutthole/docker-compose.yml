networks:
  gotron:
    name: gotron
    driver: bridge

services:
  ingress:
    image: "nginx:stable-alpine"
    container_name: "ingress"
    restart: "always"
    logging:
      driver: "journald"
    user: "${HOST_USER}"
    volumes:
      - ${DATA_HOME}/config/nginx/conf.d:/etc/nginx/conf.d
      - ${DATA_HOME}/data/letsencrypt:/letsencrypt
      - ${DATA_HOME}/data/nginx/logs:/logs
      - ${DATA_HOME}/data/nginx/config:/config
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "64M"
    stop_grace_period: 30s
    mem_swappiness: 0
    sysctls:
      net.core.somaxconn: 2048
    ulimits:
      nofile:
        soft: 10240
        hard: 40960
    networks:
      - gotron
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    depends_on:
      - supolka_com
      - kotlin_link
      - repo_kotlin_link
      - kotbot
      - ttrss_nginx
      - ibragimov_by_currency
      - ruslan_ibragimov_by
      - heapy_io_kotlin_jobs
      - heapy_io
      - wireguard
      - bkug_by
      - streetball_name
      - shop_streetball_name

  supolka_com:
    container_name: "supolka_com"
    image: "ghcr.io/irus/open_pirs:main"
    restart: "always"
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "16M"
    stop_grace_period: 30s
    mem_swappiness: 0
    networks:
      - gotron

  kotlin_link:
    container_name: "kotlin.link"
    image: "ghcr.io/kotlinby/awesome-kotlin:main"
    restart: "always"
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "32M"
    stop_grace_period: 30s
    mem_swappiness: 0
    networks:
      - gotron

  repo_kotlin_link:
    image: "ghcr.io/heapy/repo.kotlin.link:${REPO_KOTLIN_LINK_RELEASE}"
    container_name: "repo.kotlin.link"
    restart: "always"
    environment:
      REPO_OPTS: "-Xmx64m -XX:+UseShenandoahGC"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/healthcheck" ]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "128M"
    stop_grace_period: 30s
    mem_swappiness: 0
    networks:
      - gotron

  kotbot:
    image: "ghcr.io/heapy/kotbot:${KOTBOT_VERSION}"
    container_name: "kotbot"
    restart: "always"
    user: "${HOST_USER}"
    environment:
      KOTBOT_OPTS: "-Xmx128m -XX:+UseShenandoahGC"
      KOTBOT_TOKEN: "${KOTBOT_TOKEN}"
      KOTBOT_VERSION: "${KOTBOT_VERSION}"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "256M"
    stop_grace_period: 30s
    mem_swappiness: 0
    networks:
      - gotron

  ttrss_database:
    container_name: "ttrss_database"
    image: "postgres:14.3"
    restart: "always"
    environment:
      POSTGRES_USER: "tinytinyrss"
      POSTGRES_PASSWORD: "HPALUhAY28G4LWDf"
      POSTGRES_DB: "tinytinyrss"
    volumes:
      - "${DATA_HOME}/data/ttrss/pgdata:/var/lib/postgresql/data"
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1024M"
    stop_grace_period: 30s
    mem_swappiness: 0
    networks:
      - gotron

  ttrss:
    container_name: "ttrss"
    image: "heapy/ttrss:latest"
    restart: "always"
    volumes:
      - "${DATA_HOME}/data/ttrss/data/cache:/ttrss/reader/cache"
      - "${DATA_HOME}/data/ttrss/data/lock:/ttrss/reader/lock"
      - "${DATA_HOME}/data/ttrss/data/feed-icons:/ttrss/reader/feed-icons"
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "256M"
    stop_grace_period: 30s
    mem_swappiness: 0
    depends_on:
      - ttrss_database
    networks:
      - gotron

  ttrss_nginx:
    container_name: "ttrss_nginx"
    image: "heapy/ttrss-nginx:latest"
    command: [ "nginx-debug", "-g", "daemon off;" ]
    restart: "always"
    volumes:
      - "${DATA_HOME}/data/ttrss/data/cache:/ttrss/reader/cache"
      - "${DATA_HOME}/data/ttrss/data/lock:/ttrss/reader/lock"
      - "${DATA_HOME}/data/ttrss/data/feed-icons:/ttrss/reader/feed-icons"
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "32M"
    stop_grace_period: 30s
    mem_swappiness: 0
    networks:
      - gotron
    depends_on:
      - ttrss

  ibragimov_by_currency:
    container_name: "ibragimov_by_currency"
    image: "ghcr.io/irus/currency:main"
    restart: "always"
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "16M"
    stop_grace_period: 30s
    mem_swappiness: 0
    networks:
      - gotron

  ruslan_ibragimov_by:
    container_name: "ruslan_ibragimov_by"
    image: "ghcr.io/irus/blog:main"
    restart: "always"
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "32M"
    stop_grace_period: 30s
    mem_swappiness: 0
    networks:
      - gotron

  heapy_io_kotlin_jobs:
    container_name: "heapy_io_kotlin_jobs"
    image: "ghcr.io/heapy/kotlin_jobs:main"
    restart: "always"
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "16M"
    stop_grace_period: 30s
    mem_swappiness: 0
    networks:
      - gotron

  heapy_io:
    container_name: "heapy_io"
    image: "ghcr.io/heapy/heapy.io:main"
    restart: "always"
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "16M"
    stop_grace_period: 30s
    mem_swappiness: 0
    networks:
      - gotron

  wireguard:
    container_name: "wireguard"
    image: "weejewel/wg-easy"
    restart: "always"
    environment:
      WG_HOST: "vpn.heapy.io"
      PASSWORD: "${WIREGUARD_PASSWORD}"
    volumes:
      - "${DATA_HOME}/data/wireguard:/etc/wireguard"
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "256M"
    stop_grace_period: 30s
    mem_swappiness: 0
    ports:
      - "51820:51820/udp"
    cap_add:
      - "NET_ADMIN"
      - "SYS_MODULE"
    sysctls:
      - "net.ipv4.conf.all.src_valid_mark=1"
      - "net.ipv4.ip_forward=1"
    networks:
      - gotron

  mtproto:
    container_name: "mtproto"
    image: "heapy/mtproto:latest"
    restart: "always"
    environment:
      PROXY_SECRET: "${PROXY_SECRET}"
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "256M"
    stop_grace_period: 30s
    mem_swappiness: 0
    ports:
      - "8888:8888"
    networks:
      - gotron

  monitoring_grafana:
    container_name: "monitoring_grafana"
    image: "grafana/grafana:8.5.3"
    restart: "always"
    user: "${HOST_USER}"
    volumes:
      - "${DATA_HOME}/data/grafana:/var/lib/grafana"
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "256M"
    stop_grace_period: 30s
    mem_swappiness: 0
    ports:
      - "3000:3000"
    networks:
      - gotron

  monitoring_prometheus:
    container_name: "monitoring_prometheus"
    image: "prom/prometheus:v2.35.0"
    restart: "always"
    user: "${HOST_USER}"
    volumes:
      - "${DATA_HOME}/data/prometheus:/prometheus"
      - "${DATA_HOME}/config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "256M"
    stop_grace_period: 30s
    mem_swappiness: 0
    networks:
      - gotron

  monitoring_loki:
    container_name: "monitoring_loki"
    image: "grafana/loki:2.5.0"
    restart: "always"
    user: "${HOST_USER}"
    volumes:
      - "${DATA_HOME}/data/loki:/loki"
      - "${DATA_HOME}/config/loki/config.yml:/etc/loki/config.yml:ro"
    logging:
      driver: "journald"
    command: -config.file=/etc/loki/config.yml
    stop_grace_period: 30s
    mem_swappiness: 0
    networks:
      - gotron

  monitoring_promtail:
    container_name: "monitoring_promtail"
    image: "grafana/promtail:2.5.0"
    restart: always
    volumes:
      - "${DATA_HOME}/config/promtail/config.yml:/etc/promtail/config.yml:ro"
      - "/var/log/journal/:/var/log/journal/:ro"
      - "/run/log/journal/:/run/log/journal/:ro"
      - "/etc/machine-id:/etc/machine-id:ro"
    command: -config.file=/etc/promtail/config.yml
    stop_grace_period: 30s
    mem_swappiness: 0
    networks:
      - gotron

  bkug_by:
    container_name: "bkug_by"
    image: "wordpress:6-php8.1-apache"
    restart: always
    user: "${HOST_USER}"
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "256M"
    volumes:
      - "${DATA_HOME}/data/bkug_by/wordpress:/var/www/html"
    networks:
      - gotron

  bkug_by_db:
    container_name: "bkug_by_db"
    image: "mariadb:10.8"
    restart: always
    user: "${HOST_USER}"
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "256M"
    volumes:
      - "${DATA_HOME}/data/bkug_by/maria:/var/lib/mysql"
    environment:
      MARIADB_ROOT_PASSWORD: "Eb95FAoyGMLiMXp1xcBPDzCBf0jMnL3EFKTnBZBWaz3ac0pVrS"
    networks:
      - gotron

  streetball_name:
    container_name: "streetball_name"
    image: "wordpress:6-php8.1-apache"
    restart: always
    user: "${HOST_USER}"
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "256M"
    volumes:
      - "${DATA_HOME}/data/streetball_name/wordpress:/var/www/html"
    networks:
      - gotron

  streetball_name_db:
    container_name: "streetball_name_db"
    image: "mariadb:10.8"
    restart: always
    user: "${HOST_USER}"
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "256M"
    volumes:
      - "${DATA_HOME}/data/streetball_name/maria:/var/lib/mysql"
    environment:
      MARIADB_ROOT_PASSWORD: "YKmpxXYrAwQOgREv2f9iGXNzyheGVwLlGK8SA1qcvk0S8kOtby"
    networks:
      - gotron

  shop_streetball_name:
    container_name: "shop_streetball_name"
    image: "wordpress:6-php8.1-apache"
    restart: always
    user: "${HOST_USER}"
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "256M"
    volumes:
      - "${DATA_HOME}/data/shop_streetball_name/wordpress:/var/www/html"
    networks:
      - gotron

  shop_streetball_name_db:
    container_name: "shop_streetball_name_db"
    image: "mariadb:10.8"
    restart: always
    user: "${HOST_USER}"
    logging:
      driver: "journald"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "256M"
    volumes:
      - "${DATA_HOME}/data/shop_streetball_name/maria:/var/lib/mysql"
    environment:
      MARIADB_ROOT_PASSWORD: "7xcDfuvCt4BsNTB1LpDWUleWcc5WxWcyUxcXdo10hEQy2w4VrZ"
    networks:
      - gotron
