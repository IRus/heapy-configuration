networks:
  schwifty:
    name: schwifty
    driver: bridge

services:
  cloudflared:
    container_name: "cloudflared"
    image: "cloudflare/cloudflared:latest"
    command: [ "tunnel", "--no-autoupdate", "run"]
    restart: always
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    logging:
      driver: "journald"
    networks:
      - schwifty
    depends_on:
      - heapy_io
      - ruslan_ibragimov_by
      - ibragimov_by
      - streetball_by
      - streetball_name
      - shop_streetball_name
      - kotbot
      - kotlin_link
      - repo_kotlin_link

  ruslan_ibragimov_by:
    container_name: "ruslan.ibragimov.by"
    image: "ghcr.io/irus/blog:main"
    restart: "always"
    logging:
      driver: "journald"
    stop_grace_period: 30s
    networks:
      - schwifty

  heapy_io:
    image: "nginx:stable-alpine"
    container_name: "heapy.io-ingress"
    restart: "always"
    logging:
      driver: "journald"
    volumes:
      - ./heapy_io/nginx/conf.d:/etc/nginx/conf.d
    stop_grace_period: 30s
    networks:
      - schwifty
    depends_on:
      - heapy_io_kotlin_jobs
      - heapy_io_root

  heapy_io_kotlin_jobs:
    container_name: "heapy.io-kotlin_jobs"
    image: "ghcr.io/heapy/kotlin_jobs:main"
    restart: "always"
    logging:
      driver: "journald"
    stop_grace_period: 30s
    networks:
      - schwifty

  heapy_io_root:
    container_name: "heapy.io"
    image: "ghcr.io/heapy/heapy.io:main"
    restart: "always"
    logging:
      driver: "journald"
    stop_grace_period: 30s
    networks:
      - schwifty

  ibragimov_by:
    image: "nginx:stable-alpine"
    container_name: "ibragimov.by-ingress"
    restart: "always"
    logging:
      driver: "journald"
    volumes:
      - ./ibragimov_by/nginx/conf.d:/etc/nginx/conf.d
    stop_grace_period: 30s
    networks:
      - schwifty
    depends_on:
      - ttrss_nginx
      - ibragimov_by_currency

  ibragimov_by_currency:
    container_name: "ibragimov.by-currency"
    image: "ghcr.io/irus/currency:main"
    restart: "always"
    logging:
      driver: "journald"
    stop_grace_period: 30s
    networks:
      - schwifty

  # docker exec -it ttrss_database /usr/bin/pg_dumpall -U tinytinyrss > dumpfile
  # docker cp dumpfile ttrss_database:/dumpfile
  # docker exec ttrss_database psql -U tinytinyrss -d tinytinyrss -f /dumpfile
  ttrss_database:
    container_name: "ttrss_database"
    user: "1000:1000"
    image: "postgres:16.1"
    restart: "always"
    environment:
      POSTGRES_USER: "tinytinyrss"
      POSTGRES_PASSWORD: "HPALUhAY28G4LWDf"
      POSTGRES_DB: "tinytinyrss"
    volumes:
      - "./ttrss/data/pgdata:/var/lib/postgresql/data"
      - "/etc/passwd:/etc/passwd:ro"
    logging:
      driver: "journald"
    stop_grace_period: 30s
    shm_size: "512M"
    networks:
      - schwifty

  ttrss:
    container_name: "ttrss"
    image: "heapy/ttrss:main"
    restart: "always"
    environment:
      - TTRSS_HTTP_PROXY=${TTRSS_HTTP_PROXY}
    volumes:
      - "./ttrss/data/cache:/ttrss/reader/cache"
      - "./ttrss/data/lock:/ttrss/reader/lock"
      - "./ttrss/data/feed-icons:/ttrss/reader/feed-icons"
    logging:
      driver: "journald"
    stop_grace_period: 30s
    depends_on:
      - ttrss_database
    networks:
      - schwifty

  ttrss_nginx:
    container_name: "ibragimov.by-reader"
    image: "heapy/ttrss-nginx:main"
    command: [ "nginx-debug", "-g", "daemon off;" ]
    restart: "always"
    volumes:
      - "./ttrss/data/cache:/ttrss/reader/cache"
      - "./ttrss/data/lock:/ttrss/reader/lock"
      - "./ttrss/data/feed-icons:/ttrss/reader/feed-icons"
    logging:
      driver: "journald"
    stop_grace_period: 30s
    networks:
      - schwifty
    depends_on:
      - ttrss

  kotlin_link:
    container_name: "kotlin.link"
    image: "ghcr.io/kotlinby/awesome-kotlin:main"
    restart: "always"
    logging:
      driver: "journald"
    stop_grace_period: 30s
    networks:
      - schwifty

  monitoring_grafana:
    container_name: "monitoring_grafana"
    user: "1000:1000"
    image: "grafana/grafana:10.2.3"
    restart: "always"
    volumes:
      - "./grafana/data:/var/lib/grafana"
    logging:
      driver: "journald"
    stop_grace_period: 30s
    networks:
      - schwifty

  monitoring_prometheus:
    container_name: "monitoring_prometheus"
    image: "prom/prometheus:v2.48.1"
    user: "1000:1000"
    restart: "always"
    volumes:
      - "./prometheus/data:/prometheus"
      - "./prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
    logging:
      driver: "journald"
    stop_grace_period: 30s
    networks:
      - schwifty

  monitoring_loki:
    container_name: "monitoring_loki"
    image: "grafana/loki:2.8.7"
    user: "1000:1000"
    restart: "always"
    volumes:
      - "./loki/data:/loki"
      - "./loki/config/config.yml:/etc/loki/config.yml:ro"
    logging:
      driver: "journald"
    command: -config.file=/etc/loki/config.yml
    networks:
      - schwifty

  monitoring_promtail:
    container_name: "monitoring_promtail"
    image: "grafana/promtail:2.8.7"
    user: "1000:1000"
    restart: always
    volumes:
      - "./promtail/config/config.yml:/etc/promtail/config.yml:ro"
      - "/var/log/journal/:/var/log/journal/:ro"
      - "/run/log/journal/:/run/log/journal/:ro"
      - "/etc/machine-id:/etc/machine-id:ro"
    command: -config.file=/etc/promtail/config.yml
    stop_grace_period: 30s
    networks:
      - schwifty

  bkug_by:
    container_name: "bkug.by"
    image: "wordpress:6.4-php8.2-apache"
    user: "1000:1000"
    restart: always
    logging:
      driver: "journald"
    volumes:
      - "./bkug_by/wordpress:/var/www/html"
    networks:
      - schwifty
    depends_on:
      - bkug_by_db

  bkug_by_db:
    container_name: "bkug.by_db"
    image: "mariadb:10.11"
    restart: always
    logging:
      driver: "journald"
    volumes:
      - "./bkug_by/maria:/var/lib/mysql"
    environment:
      MARIADB_ROOT_PASSWORD: "Eb95FAoyGMLiMXp1xcBPDzCBf0jMnL3EFKTnBZBWaz3ac0pVrS"
    networks:
      - schwifty

  streetball_by:
    image: "nginx:stable-alpine"
    container_name: "streetball.by-ingress"
    restart: "always"
    logging:
      driver: "journald"
    volumes:
      - ./streetball_by/nginx/conf.d:/etc/nginx/conf.d
    stop_grace_period: 30s
    networks:
      - schwifty

  streetball_name:
    container_name: "streetball.name"
    image: "wordpress:6.4-php8.2-apache"
    user: "1000:1000"
    restart: always
    logging:
      driver: "journald"
    volumes:
      - "./streetball_name/wordpress:/var/www/html"
    networks:
      - schwifty
    depends_on:
      - streetball_name_db

  streetball_name_db:
    container_name: "streetball.name_db"
    image: "mariadb:10.11"
    restart: always
    logging:
      driver: "journald"
    volumes:
      - "./streetball_name/maria:/var/lib/mysql"
    environment:
      MARIADB_ROOT_PASSWORD: "YKmpxXYrAwQOgREv2f9iGXNzyheGVwLlGK8SA1qcvk0S8kOtby"
    networks:
      - schwifty

  shop_streetball_name:
    container_name: "shop.streetball.name"
    image: "wordpress:6.4-php8.2-apache"
    user: "1000:1000"
    restart: always
    logging:
      driver: "journald"
    volumes:
      - "./shop_streetball_name/wordpress:/var/www/html"
    networks:
      - schwifty
    depends_on:
      - shop_streetball_name_db

  shop_streetball_name_db:
    container_name: "shop.streetball.name_db"
    image: "mariadb:10.11"
    restart: always
    logging:
      driver: "journald"
    volumes:
      - "./shop_streetball_name/maria:/var/lib/mysql"
    environment:
      MARIADB_ROOT_PASSWORD: "7xcDfuvCt4BsNTB1LpDWUleWcc5WxWcyUxcXdo10hEQy2w4VrZ"
    networks:
      - schwifty

  repo_kotlin_link:
    image: "ghcr.io/heapy/repo.kotlin.link:main"
    container_name: "repo.kotlin.link"
    restart: "always"
    environment:
      REPO_OPTS: "-Xmx256m -XX:+UseShenandoahGC"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/healthcheck" ]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "journald"
    stop_grace_period: 30s
    networks:
      - schwifty

  kotbot:
    image: "ghcr.io/heapy/kotbot:main"
    container_name: "kotbot.heapy.io"
    restart: "always"
    environment:
      KOTBOT_OPTS: "-Xmx256m -XX:+UseShenandoahGC"
      KOTBOT_TOKEN: "${KOTBOT_TOKEN}"
      KOTBOT_POSTGRES_USER: "kotbot"
      KOTBOT_POSTGRES_PASSWORD: "kotbot"
      KOTBOT_POSTGRES_DATABASE: "kotbot"
      KOTBOT_POSTGRES_HOST: "kotbot_database"
      KOTBOT_POSTGRES_PORT: "5432"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "journald"
    stop_grace_period: 30s
    networks:
      - schwifty
    depends_on:
      - kotbot_database

  kotbot_database:
    container_name: "kotbot_database"
    user: "1000:1000"
    image: "postgres:16.1"
    restart: "always"
    environment:
      POSTGRES_USER: "kotbot"
      POSTGRES_PASSWORD: "kotbot"
      POSTGRES_DB: "kotbot"
    volumes:
      - "./kotbot/pgdata:/var/lib/postgresql/data"
      - "/etc/passwd:/etc/passwd:ro"
    logging:
      driver: "journald"
    stop_grace_period: 30s
    shm_size: "512M"
    networks:
      - schwifty
